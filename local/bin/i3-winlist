#!/usr/bin/env python3

from argparse import ArgumentParser
import i3ipc
import sys

if __name__ == '__main__':
    parser = ArgumentParser()
    parser.add_argument('scope', nargs='?', default='all')
    args = parser.parse_args()

    i3 = i3ipc.Connection()
    tree = i3.get_tree()

    if args.scope == 'workspace':
        root = tree.find_focused().workspace()
        show_workspace = False
    elif args.scope == 'lateral':
        root = tree.find_focused().parent
        show_workspace = False
    else:
        root = tree
        show_workspace = True

    num = 0
    index = -1
    nodes = root.leaves()
    digits = len(str(len(nodes)))

    for node in nodes:
        if node.focused:
            index = num
        con_id = node.id
        window_class = node.window_class or 'i3'
        workspace = node.workspace().name
        title = node.name or node.layout
        num = num + 1
        depth = 0
        n = node
        while n.parent != root:
            n = n.parent
            depth = depth + 1
        if show_workspace:
            print('%s\t%*d: [%s] [%s] %s' %
                    (con_id, digits, num, workspace, window_class, title))
        else:
            print('%s\t%*d: %s[%s] %s' %
                    (con_id, digits, num, '  ' * depth, window_class, title))

    sys.exit(index)
